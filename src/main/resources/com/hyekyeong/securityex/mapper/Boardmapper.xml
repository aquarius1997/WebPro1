<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyekyeong.securityex.mapper.BoardMapper">

        <!--검색을 위한 동적 sql -->
    <sql id="criteria">
        <trim prefix="(" suffix=") AND " prefixOverrides="OR">
             <foreach item="type" collection="typeArr">
                 <trim prefix="OR">
                     <choose>
                         <when test="type == 'T'.toString()">
                             title like '%'||#{keyword}||'%'
                         </when>
                         <when test="type == 'C'.toString()">
                             content like '%'||#{keyword}||'%'
                         </when>
                         <when test="type == 'W'.toString()">
                             writer like '%'||#{keyword}||'%'
                         </when>
                     </choose>
                 </trim>
             </foreach>
        </trim>
    </sql>


    <!--전체 데이터의 개수 구하기-->
    <select id="getTotalCount" resultType="int">
       <!-- select count(*) from tbl_board where bno>0-->
       select count(*) from tbl_board where
       <include refid="criteria"></include>
       bno>0
    </select>

    <!--DB에서 테이블 전체 가져오기-->
    <select id="getList" resultType="com.hyekyeong.securityex.domain.BoardVO">
	<![CDATA[
		select * from tbl_board where
		bno > 0 and rownum <= 100
		]]>
    </select>


    <!--DB에서 페이지 처리를 한 리스트 가져오기-->
    <select id="getListWithPaging" resultType="com.hyekyeong.securityex.domain.BoardVO">
        <![CDATA[
  select
    bno, title, content, writer, regdate, updatedate, replycnt
  from
      (
      select /*+INDEX_DESC(tbl_board pk_board) */
        rownum rn, bno, title, content, writer, regdate, updatedate, replycnt
      from
        tbl_board
      where
  ]]>

        <!-- sql 삽입-->
        <include refid="criteria"></include>

        <![CDATA[
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}
  ]]>
    </select>

    <!--insert만 처리되며 생성된 PK값을 알 필요 없을 경우-->
    <insert id="insert">
        insert into tbl_board (bno, title, content, writer)
        values (seq_board.nextval, #{title}, #{content}, #{writer})
    </insert>

    <!--insert문이 실행되고 생성된 PK값을 알아야 하는 경우-->
    <insert id="insertSelectKey">
        <selectKey keyProperty="bno" order="BEFORE" resultType="long">
            select seq_board.nextval from dual
        </selectKey>

        insert into tbl_board (bno, title, content, writer)
        values (#{bno}, #{title}, #{content}, #{writer})
    </insert>

    <!--select-->
    <select id="read" resultType="com.hyekyeong.securityex.domain.BoardVO">
        select * from tbl_board where bno = #{bno}
    </select>

    <!--delete-->
    <delete id="delete">
        delete tbl_board where bno = #{bno}
    </delete>

    <!--update-->
    <update id="update">
        update tbl_board
        set title=#{title},
        content=#{content},
        writer=#{writer},
        updateDate=sysdate
        where bno=#{bno}
    </update>

    <!-- 댓글의 수를 카운트-->
    <update id="updateReplyCnt">
        update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
    </update>

</mapper>